


Zoom in and out the simulator to diferent sizes:    ⌘1    ⌘2          ⌘3

When to use retainCount? http://whentouseretaincount.com/

A command-line tool that reorganizes your Xcode project folder to match your Xcode groups   https://github.com/venmo/synx

Demoday Ironhack Madrid final talk (in Spanish) by Rafa Aguilar

Inspiring, humbling!

https://www.youtube.com/watch?v=CeZ_Hmlh568



http://objectheap.com/fucking-block-syntax/

Online bug reporter (File Radar) https://bugreport.apple.com/    Desktop file radar:  http://www.quickradar.com/


http://stackoverflow.com/questions/10368606/on-ios-why-can-uigesturerecognizer-be-instantiated-if-it-is-an-abstract-class




First email sent by Google Support team AFTER remove your app:

This is a notification that your application, ESPN Channel, with package ID com.arequa.espn, has been removed from the Google Play Store.

REASON FOR REMOVAL: Violation of the intellectual property and impersonation or deceptive behaviorprovisions of the Content Policy.

All violations are tracked. Serious or repeated violations of any nature will result in the termination of your developer account, and investigation and possible termination of related Google accounts. If your account is terminated, payments will cease and Google may recover the proceeds of any past sales and the cost of any associated fees (such as chargebacks and payment transaction fees) from you.

If your developer account is still in good standing, you may revise and upload a policy compliant version of your application as a new package name. Before uploading any new applications, please review the Developer Distribution Agreement andContent Policy.

If you feel we have made this determination in error, you can visit the Google Play Help Center article for additional information regarding this removal.

The Google Play Team

franciscocaro [11:46 PM]
And then, the best of the best... Second robot email AFTER remove your developer account:

This is a notification that your Google Play Publisher account has been terminated.

REASON FOR TERMINATION: Multiple violations of the Content Policy and Developer Distribution Agreement as outlined in previous emails sent to the registered email address of your Publisher account.

Please note that Google Play Publisher terminations are associated with developers, and may span multiple account registrations and related Google services. If you feel we have made an error, you can visit the Google Play Help Center article for additional information regarding this termination.

Please do not attempt to register a new developer account. We will not be restoring your account at this time.

The Google Play Team





This app (a TV series related app) was mentioned by Victor. On Wednesday we will build an app based on iShows app http://ishowsapp.com/

[Intro to Swift, Diego Freniche (Me) for the IronHack](https://www.youtube.com/watch?v=icg82pEv4jQ)

https://developer.apple.com/videos/wwdc/2014/#216
Learn about the latest in iOS and OS X with WWDC 2014 session videos.



 http://bohemiancoding.com/sketch/ is a vectorial image program (similar to Adobe Ilustrator) used by iOs developers. (


http://helpx.adobe.com/photoshop/using/blending-modes.html Nice and simple explanation about blending from Adobe itself

https://developer.apple.com/library/ios/documentation/GraphicsImaging/Reference/CoreImageFilterReference/index.html#//apple_ref/doc/filter/ci/CIHardLightBlendMode
Describes the built-in image processing filters available through Core Image.




Links: http://www.raywenderlich.com/84043/ios-8-visual-effects-tutorial
   http://rafaparadela.github.io/ironhack/#w03
   http://www.shinobicontrols.com/iOS8DayByDay


Tower 2 http://www.git-tower.com/ a client of Git.


Crashlytics is an analytics tool mentioned by Ricardo Caballero.  https://try.crashlytics.com/    It reports all possible crashes of your apps.




http://www.macappdownload.net
AppKed - Download Free Mac Apps, Games.


I really encourage all of you to see this inspiring talk from NSSpain 2013

http://vimeo.com/108905746



Talking about apps ideas: 
http://vimeo.com/m/109405701



http://www.paintcodeapp.com/tutorials

Self-learning exercises for week1 and week2:          http://giria.github.io


Self-learning exercises for week1 and week2:          http://giria.github.io

Session about design by Erik de Erice is recorded at:  http://bit.ly/diseñatuapp


Dribble: https://dribbble.com

Links: Dribble: https://dribbble.com       search for: iOS animations    Objc.io Articles about Objective-C Flat colors: http://flatuicolors.com QuartzCode http://www.quartzcodeapp.com (PaintCode for animations) Reveal App http://revealapp.com  Principles of animation Disney http://vimeo.com/93206523




Great ! Pol and Alessandro blog about Ironhack classes: https://medium.com/@poolqf/week-1-at-ironhack-62686b2a9112     http://alessandro-martin-ios.blogspot.com.es/2014/10/ironhack-ios-week-2.html


Links: Pop by Facebook: https://github.com/facebook/pop    Tutorials about animations on MiguelDiazRubio portal: http://www.migueldiazrubio.com/2013/08/02/desarrollo-ios-creando-nuestros-propios-controles-con-core-animation/      iOS Goodies http://ios-goodies.com iOS Weekly  http://iosdevweekly.com iOS state of the union http://www.state-of-the-union.com



the12principles.tumblr.com

About the custom switch for the minishows app, you can subclass UIControl and create your switch from scratch (adding subviews to it, animations between different states, etc.) or you can use any of the available pods/projects on github. This is the best one I have found: https://github.com/bvogelzang/SevenSwitch
 
GitHub
bvogelzang/SevenSwitch
SevenSwitch - iOS7 style drop in replacement for UISwitch

victorbaro [12:18 PM]
And this is a good tutorial to do the whole thing: http://www.raywenderlich.com/23424/photoshop-for-developers-creating-a-custom-uiswitch

victorbaro [12:18 PM]
jajajaja

victorbaro [12:19 PM]
One **last** thing, let me send you the .sketch project for minishows




Small Tip: if you don't want to use SevenSwitch 2.0 for being Swift-Only get the 1.4 version (Obj-C) from the github repo




https://github.com/kyleh415
kyleh415 (Kyle Hardman)



https://github.com/alessandro-martin
alessandro-martin



https://github.com/poolqf
poolqf (Pol Quintana)


https://github.com/mariabernis
mariabernis



https://github.com/franciscocarodiaz
franciscocarodiaz


https://github.com/albertvc10
albertvc10 (Albert Villanueva Carreras)





# Models

## Exercise 1

- Create an iPhone application using UITabBarController with two sections. Each section would be UITableViewControllers that would present TVShows and Movies. 

- Create two entity classes. A class for representing TVShows and another one for representing Movies

- Implement NSCopying on both classes

- Populate each table with TVShows and Movies generated randomly (content is irrelevant for this practice. It could be random strings)

- Implement some UI that allow the user to duplicate one of the previously created entities class. 

- Implement NSCoding on both classes

- Save all entities to disk using NSKeyedArchiver (suggestion: when switching sections)

- Recover all saved data using NSKeyedUnarchiver

- Try to do it using TDD

- Test at least your NSCopy and NSCoding implementations


## Exercise 2

- Use previous project to implement Equality on TVShows and Movies classes

- Implement hash on both classes

- Implement custom Equality methods

- Implement some UI that allow the user to compare between entities. (duplicated entities must match and others must mismatch)

- Implement some UI that allow the user to search into the datasource for it (containsObject:)

- Try to do it using TDD

- Test at least isEqual, isEqualTo_ClassName_  and hash methods


## Exercise 3

- Fork your previous project to redo everything using Mantle

- Add Mantle using CocoaPods

- Remove Equality, NSCoding & NSCopying implementation and make all entities extend MTLModel

- Check that your Tests still pass


## Exercise 4

- Implement MTLJSONSerializing protocol

- Try to do it using TDD

- Test at least that all your new concretion properties have the correct value

- Create a new class to read from JSON and return your entities populated with data

- Load an example JSON (provided by teacher) and obtain TVShows



Links recommended by Dani:  http://qualitycoding.org OCMockito: https://github.com/jonreid/OCMockito  Articles about Objective-C objc.io   Blog 8Light about Mocking:   http://blog.8thlight.com/uncle-bob/2014/05/14/TheLittleMocker.html

More Links libraries similar to Mantle: Groot https://github.com/gonzalezreal/Groot Produkt https://github.com/Produkt/PDKTModelBuilder

Guys, a smal disclaimer about PDKTModelBuilder : It is a work in progress project and it's absolutely not recommended for using it in a production code. Feel free to take a look on it and give us feedback. Any contribution is welcome :wink: (It still don't implements NSCoding/NSCoping and stuff like that. It is focused on parsing data and creating entities objects. Specially CoreData objects)


http://ironhack4thweek.s3.amazonaws.com/shows.json


https://developer.apple.com/Library/ios/documentation/Cocoa/Conceptual/CoreDataVersioning/Articles/vmLightweightMigration.html#//apple_ref/doc/uid/TP40004399-CH4-SW1
Explains the managed object model versioning and data migration features of Core Data.

Tower, a very good GIT client   http://www.macappdownload.net/tower-2-0-8/

Produkt/ironhack_git_practice   http://www.macappdownload.net/tower-2-0-8/

guys, check this video for easily chaining core image filters together :smile:
victorbaro [6:51 PM]
https://vimeo.com/110269167

victorbaro [12:13 PM] 
https://github.com/VAlexander/Chameleon
 
GitHub
VAlexander/Chameleon
Chameleon - A Lightweight x Powerful Flat Color Framework for iOS
victorbaro [12:13 PM]
Nice pod


Links from Dani: JaviSoto GitHub
https://github.com/JaviSoto  MSLeakHunter   
Backend libararies backbeam https://backbeam.io   Parse parse.com


NSBarcelona (http://www.meetup.com/nsbarcelona/) 
NSCoderNight Madrid(http://www.meetup.com/NSCoder-Night-Madrid/) , 
NSDrinks http://www.meetup.com/NSCoder-Night-Madrid/events/151837812/ (every two weeks) are meetups when you can contact with local iOS community.


kyleh415 [2:34 PM] 
http://ronnqvi.st/clear-animation-code/
David Rönnqvist
Clear* Animation Code

http://ronnqvi.st/thinking-like-a-bzier-path/
David Rönnqvist
Thinking like a Bézier path

http://www.objc.io/issue-12/animations-explained.html
A periodical about best practices and advanced techniques for iOS and OS X development.


victorbaro [4:20 PM] 
@kyleh415: I am glad you found that blog! I completely forgot mentioning it, the guy is really good (he came to NSSpain to talk about SceneKit for iOS)


Links form Dani:   SDWebImage https://github.com/rs/SDWebImage (a Library that implements most of the today example)           Peter Steinberger  (@steipete on Twiter) an expert on runtime. Practical runtime hackery https://www.youtube.com/watch?v=frgnVhBcIFA

df2880909bafa2689135188bf47fe5f9
fillito [11:27 AM]
http://api.trakt.tv/movies/trending.json/df2880909bafa2689135188bf47fe5f9


Links from Dani: Books about concurrency  iOS pushing the limits http://eu.wiley.com/WileyCDA/WileyTitle/productCd-1118818342.html  
 Objective-C http://www.amazon.com/Effective-Objective-C-2-0-Specific-Development/dp/0321917014      
 Strategy pattern http://objective-c.es/adapters-o-morir/  
 Head first design patterns  http://shop.oreilly.com/product/9780596007126.do   
 Working with legacy code http://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052 


 Hi guys, in order you can submit your idea for mobile projects, you can point your browser to http://ironhack-school.ideascale.com/a/ideafactory.do?mode=top&discussionFilter=byids&discussionID=9939            after sign up to ideaScale portal you can write your project  idea (or ideas) and commenting the projects of other students.
























